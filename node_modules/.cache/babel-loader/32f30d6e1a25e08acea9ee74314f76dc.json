{"remainingRequest":"C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\src\\api\\http.js","dependencies":[{"path":"C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\src\\api\\http.js","mtime":1672883674000},{"path":"C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\babel.config.js","mtime":1672883674000},{"path":"C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsgLy8g5byV5YWlYXhpb3MKaW1wb3J0IFFTIGZyb20gJ3FzJzsgLy8gcXPmqKHlnZfvvIznlKjmnaXluo/liJfljJZwb3N057G75Z6L55qE5pWw5o2uCmltcG9ydCByb3V0ZXIgZnJvbSAnQC9yb3V0ZXIvaW5kZXgnOwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZS9pbmRleCc7CmltcG9ydCB7IEVsTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtcGx1cyc7CmxldCB1c2VyVG9rZW4gPSAiIjsKCi8vIOivt+axgui2heaXtuaXtumXtApheGlvcy5kZWZhdWx0cy50aW1lb3V0ID0gMTAwMDAwOwoKLy8gcG9zdOivt+axguWktAovLyBheGlvcy5kZWZhdWx0cy5oZWFkZXJzLnBvc3RbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PVVURi04JzsKYXhpb3MuZGVmYXVsdHMud2l0aENyZWRlbnRpYWxzID0gZmFsc2U7Ci8vIGF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWyd6LXRva2VuJ10gPSB1c2VyVG9rZW47CmF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWyd6LXRva2VuJ10gPSB1c2VyVG9rZW47CmF4aW9zLmRlZmF1bHRzLmhlYWRlcnMucG9zdFsnQ29udGVudC1UeXBlJ10gPSAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04JzsgLy/phY3nva7or7fmsYLlpLQKLy8g6K+35rGC5oum5oiq5ZmoCmF4aW9zLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShjb25maWcgPT4gewogIC8vIOavj+asoeWPkemAgeivt+axguS5i+WJjeWIpOaWreacrOWcsOS4reaYr+WQpuWtmOWcqHRva2VuICAgICAgICAKICAvLyDlpoLmnpzlrZjlnKjvvIzliJnnu5/kuIDlnKhodHRw6K+35rGC55qEaGVhZGVy6YO95Yqg5LiKdG9rZW7vvIzov5nmoLflkI7lj7DmoLnmja50b2tlbuWIpOaWreS9oOeahOeZu+W9leaDheWGtQogIC8vIOWNs+S9v+acrOWcsOWtmOWcqHRva2Vu77yM5Lmf5pyJ5Y+v6IO9dG9rZW7mmK/ov4fmnJ/nmoTvvIzmiYDku6XlnKjlk43lupTmi6bmiKrlmajkuK3opoHlr7nov5Tlm57nirbmgIHov5vooYzliKTmlq0gPwogIC8vIGxldCB1c2VyVG9rZW4gPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJ1c2VyVG9rZW4iKTsgLy/ojrflj5bmlbDmja4KICAvLyB1c2VyVG9rZW4gJiYgKGNvbmZpZy5oZWFkZXJzLkF1dGhvcml6YXRpb24gPSB1c2VyVG9rZW4pOyAgICAgICAgCiAgLy8gcmV0dXJuIGNvbmZpZzsgICAKICBsZXQgdXNlciA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ1c2VyVG9rZW4iKTsgLy/ojrflj5bmlbDmja4KICBpZiAodXNlcikgewogICAgY29uZmlnLmhlYWRlcnNbJ3otdG9rZW4nXSA9IHVzZXI7CiAgfQogIHJldHVybiBjb25maWc7Cn0sIGVycm9yID0+IHsKICByZXR1cm4gUHJvbWlzZS5lcnJvcihlcnJvcik7Cn0pOwoKLy8g5ZON5bqU5oum5oiq5ZmoCmF4aW9zLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UocmVzcG9uc2UgPT4gewogIC8vIOWmguaenOi/lOWbnueahOeKtuaAgeeggeS4ujIwMO+8jOivtOaYjuaOpeWPo+ivt+axguaIkOWKn++8jOWPr+S7peato+W4uOaLv+WIsOaVsOaNriAgICAgCiAgLy8g5ZCm5YiZ55qE6K+d5oqb5Ye66ZSZ6K+vCiAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7CiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3BvbnNlKTsKICB9IGVsc2UgewogICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlc3BvbnNlKTsKICB9Cn0sCi8vIOacjeWKoeWZqOeKtuaAgeeggeS4jeaYrzLlvIDlpLTnmoTnmoTmg4XlhrUKLy8g6L+Z6YeM5Y+v5Lul6Lef5L2g5Lus55qE5ZCO5Y+w5byA5Y+R5Lq65ZGY5Y2P5ZWG5aW957uf5LiA55qE6ZSZ6K+v54q25oCB56CBICAgIAovLyDnhLblkI7moLnmja7ov5Tlm57nmoTnirbmgIHnoIHov5vooYzkuIDkupvmk43kvZzvvIzkvovlpoLnmbvlvZXov4fmnJ/mj5DnpLrvvIzplJnor6/mj5DnpLrnrYnnrYkKLy8g5LiL6Z2i5YiX5Li+5Yeg5Liq5bi46KeB55qE5pON5L2c77yM5YW25LuW6ZyA5rGC5Y+v6Ieq6KGM5omp5bGVCmVycm9yID0+IHsKICBpZiAoZXJyb3IucmVzcG9uc2Uuc3RhdHVzKSB7CiAgICBzd2l0Y2ggKGVycm9yLnJlc3BvbnNlLnN0YXR1cykgewogICAgICAvLyA0MDE6IOacqueZu+W9lQogICAgICAvLyDmnKrnmbvlvZXliJnot7PovaznmbvlvZXpobXpnaLvvIzlubbmkLrluKblvZPliY3pobXpnaLnmoTot6/lvoQKICAgICAgLy8g5Zyo55m75b2V5oiQ5Yqf5ZCO6L+U5Zue5b2T5YmN6aG16Z2i77yM6L+Z5LiA5q2l6ZyA6KaB5Zyo55m75b2V6aG15pON5L2c44CCICAgICAgICAgICAgICAgIAogICAgICBjYXNlIDQwMzoKICAgICAgICByb3V0ZXIucmVwbGFjZSh7CiAgICAgICAgICBwYXRoOiAnL1JlZ2lzdGVyJywKICAgICAgICAgIHF1ZXJ5OiB7CiAgICAgICAgICAgIHJlZGlyZWN0OiByb3V0ZXIuY3VycmVudFJvdXRlLmZ1bGxQYXRoCiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgYnJlYWs7CiAgICAgIC8vIDQwMyB0b2tlbui/h+acnwogICAgICAvLyDnmbvlvZXov4fmnJ/lr7nnlKjmiLfov5vooYzmj5DnpLoKICAgICAgLy8g5riF6Zmk5pys5ZywdG9rZW7lkozmuIXnqbp2dWV45LitdG9rZW7lr7nosaEKICAgICAgLy8g6Lez6L2s55m75b2V6aG16Z2iICAgICAgICAgICAgICAgIAogICAgICBjYXNlIDQwMToKICAgICAgICBpZiAoY29kZSA9PSAxKSB7CiAgICAgICAgICBjb2RlID0gMDsKICAgICAgICAgIEVsTWVzc2FnZSh7CiAgICAgICAgICAgIG1lc3NhZ2U6ICfnmbvlvZXov4fmnJ/vvIzor7fph43mlrDnmbvlvZUnLAogICAgICAgICAgICBkdXJhdGlvbjogMzAwMCwKICAgICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLAogICAgICAgICAgICB0eXBlOiAnZXJyb3InCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgICAgLy8g5riF6ZmkdG9rZW4KICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndXNlclRva2VuJyk7CgogICAgICAgIC8vIOi3s+i9rOeZu+W9lemhtemdou+8jOW5tuWwhuimgea1j+iniOeahOmhtemdomZ1bGxQYXRo5Lyg6L+H5Y6777yM55m75b2V5oiQ5Yqf5ZCO6Lez6L2s6ZyA6KaB6K6/6Zeu55qE6aG16Z2iIAogICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgcm91dGVyLnJlcGxhY2UoewogICAgICAgICAgICBwYXRoOiAnL1JlZ2lzdGVyJywKICAgICAgICAgICAgcXVlcnk6IHsKICAgICAgICAgICAgICByZWRpcmVjdDogcm91dGVyLmN1cnJlbnRSb3V0ZS5mdWxsUGF0aAogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9LCAxMDAwKTsKICAgICAgICBicmVhazsKCiAgICAgIC8vIDQwNOivt+axguS4jeWtmOWcqAogICAgICBjYXNlIDQwNDoKICAgICAgICBFbE1lc3NhZ2UoewogICAgICAgICAgbWVzc2FnZTogJ+e9kee7nOivt+axguS4jeWtmOWcqCcsCiAgICAgICAgICBkdXJhdGlvbjogMzAwMCwKICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZSwKICAgICAgICAgIHR5cGU6ICdlcnJvcicKICAgICAgICB9KTsKICAgICAgICBicmVhazsKICAgICAgLy8g5YW25LuW6ZSZ6K+v77yM55u05o6l5oqb5Ye66ZSZ6K+v5o+Q56S6CiAgICAgIGRlZmF1bHQ6CiAgICAgICAgY29uc29sZS5sb2coZXJyKTsKICAgIH0KICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvci5yZXNwb25zZSk7CiAgfQp9KTsKCi8qKiANCiAqIGdldOaWueazle+8jOWvueW6lGdldOivt+axgiANCiAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgW+ivt+axgueahHVybOWcsOWdgF0gDQogKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zIFvor7fmsYLml7bmkLrluKbnmoTlj4LmlbBdIA0KICovCmV4cG9ydCBmdW5jdGlvbiBnZXQodXJsLCBwYXJhbXMpIHsKICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgYXhpb3MuZ2V0KHVybCwgewogICAgICBwYXJhbXM6IHBhcmFtcwogICAgfSkudGhlbihyZXMgPT4gewogICAgICByZXNvbHZlKHJlcy5kYXRhKTsKICAgIH0pLmNhdGNoKGVyciA9PiB7CiAgICAgIHJlamVjdChlcnIuZGF0YSk7CiAgICB9KTsKICB9KTsKfQoKLyoqDQogKiBwb3N05pa55rOV77ya5Y6f55CG5ZCMZ2V05Z+65pys5LiA5qC377yM5L2G5piv6KaB5rOo5oSP55qE5piv77yMcG9zdOaWueazleW/hemhu+imgeS9v+eUqOWvueaPkOS6pOS7juWPguaVsOWvueixoei/m+ihjOW6j+WIl+WMlueahOaTjeS9nO+8jA0KICog5omA5Lul6L+Z6YeM5oiR5Lus6YCa6L+Hbm9kZeeahHFz5qih5Z2X5p2l5bqP5YiX5YyW5oiR5Lus55qE5Y+C5pWw77yM5aaC5p6c5rKh5pyJ5bqP5YiX5YyW5pON5L2c77yM5ZCO5Y+w5piv5ou/5LiN5Yiw5o+Q5Lqk55qE5pWw5o2u44CCDQogKiANCiAqIHBvc3Tmlrnms5XvvIzlr7nlupRwb3N06K+35rGCIA0KICogQHBhcmFtIHtTdHJpbmd9IHVybCBb6K+35rGC55qEdXJs5Zyw5Z2AXSANCiAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXMgW+ivt+axguaXtuaQuuW4pueahOWPguaVsF0gDQogKi8KZXhwb3J0IGZ1bmN0aW9uIHBvc3QodXJsLCBwYXJhbXMpIHsKICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgLy8gY29uc29sZS5sb2coUVMuc3RyaW5naWZ5KHBhcmFtcykpCiAgICBheGlvcy5wb3N0KHVybCwgcGFyYW1zKS50aGVuKHJlcyA9PiB7CiAgICAgIHJlc29sdmUocmVzLmRhdGEpOwogICAgfSkuY2F0Y2goZXJyID0+IHsKICAgICAgcmVqZWN0KGVyci5kYXRhKTsKICAgIH0pOwogIH0pOwp9"},{"version":3,"names":["axios","QS","router","store","ElMessage","userToken","defaults","timeout","withCredentials","headers","common","post","interceptors","request","use","config","user","localStorage","getItem","error","Promise","response","status","resolve","reject","replace","path","query","redirect","currentRoute","fullPath","code","message","duration","showClose","type","removeItem","setTimeout","console","log","err","get","url","params","then","res","data","catch"],"sources":["C:/Users/DELL/Desktop/code/dt_cup_innovate_ui/src/api/http.js"],"sourcesContent":["\r\nimport axios from 'axios'; // 引入axios\r\nimport QS from 'qs'; // qs模块，用来序列化post类型的数据\r\nimport router from '@/router/index'\r\nimport store from '@/store/index';\r\nimport { ElMessage } from 'element-plus'\r\n\r\nlet userToken = \"\"; \r\n\r\n// 请求超时时间\r\naxios.defaults.timeout = 100000;\r\n\r\n// post请求头\r\n// axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\r\naxios.defaults.withCredentials = false;\r\n// axios.defaults.headers.common['z-token'] = userToken;\r\naxios.defaults.headers.common['z-token'] = userToken;\r\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=UTF-8';//配置请求头\r\n// 请求拦截器\r\naxios.interceptors.request.use(    \r\n    config => {        \r\n        // 每次发送请求之前判断本地中是否存在token        \r\n        // 如果存在，则统一在http请求的header都加上token，这样后台根据token判断你的登录情况\r\n        // 即使本地存在token，也有可能token是过期的，所以在响应拦截器中要对返回状态进行判断 ?\r\n        // let userToken = sessionStorage.getItem(\"userToken\"); //获取数据\r\n        // userToken && (config.headers.Authorization = userToken);        \r\n        // return config;   \r\n        let user = localStorage.getItem(\"userToken\"); //获取数据\r\n        if (user) {\r\n            config.headers['z-token'] = user \r\n        }\r\n        return config; \r\n    },    \r\n    error => {\r\n\t\treturn Promise.error(error);\r\n\t}\r\n);\r\n\r\n\r\n\r\n// 响应拦截器\r\naxios.interceptors.response.use(    \r\n    response => {   \r\n        // 如果返回的状态码为200，说明接口请求成功，可以正常拿到数据     \r\n        // 否则的话抛出错误\r\n        if (response.status === 200) {            \r\n            return Promise.resolve(response);        \r\n        } else {            \r\n            return Promise.reject(response);        \r\n        }    \r\n    },    \r\n    // 服务器状态码不是2开头的的情况\r\n    // 这里可以跟你们的后台开发人员协商好统一的错误状态码    \r\n    // 然后根据返回的状态码进行一些操作，例如登录过期提示，错误提示等等\r\n    // 下面列举几个常见的操作，其他需求可自行扩展\r\n    error => {         \r\n        if (error.response.status) {            \r\n            switch (error.response.status) {                \r\n                // 401: 未登录\r\n                // 未登录则跳转登录页面，并携带当前页面的路径\r\n                // 在登录成功后返回当前页面，这一步需要在登录页操作。                \r\n                case 403:                    \r\n                    router.replace({                        \r\n                        path: '/Register',                        \r\n                        query: { \r\n                            redirect: router.currentRoute.fullPath \r\n                        }\r\n                    });\r\n                    break;\r\n                // 403 token过期\r\n                // 登录过期对用户进行提示\r\n                // 清除本地token和清空vuex中token对象\r\n                // 跳转登录页面                \r\n                case 401:\r\n                    if (code == 1) {\r\n                        code = 0;\r\n                        ElMessage({\r\n                            message: '登录过期，请重新登录',\r\n                            duration: 3000,\r\n                            showClose: true,\r\n                            type: 'error',\r\n                        });\r\n                    }\r\n                    // 清除token\r\n                    localStorage.removeItem('userToken');\r\n                    \r\n                    // 跳转登录页面，并将要浏览的页面fullPath传过去，登录成功后跳转需要访问的页面 \r\n                    setTimeout(() => {                        \r\n                        router.replace({                            \r\n                            path: '/Register',                            \r\n                            query: { \r\n                                redirect: router.currentRoute.fullPath \r\n                            }                        \r\n                        });                    \r\n                    }, 1000);                    \r\n                    break; \r\n\r\n                // 404请求不存在\r\n                case 404:\r\n\t\t\t\t\tElMessage({\r\n\t\t\t\t\t    message: '网络请求不存在',\r\n\t\t\t\t\t    duration: 3000,\r\n\t\t\t\t\t    showClose: true,\r\n\t\t\t\t\t\ttype: 'error',\r\n\t\t\t\t\t});\r\n                    break;\r\n                // 其他错误，直接抛出错误提示\r\n                default:\r\n\t\t\t\t\tconsole.log(err)\r\n            }\r\n            return Promise.reject(error.response);\r\n        }\r\n    }    \r\n);\r\n\r\n/** \r\n * get方法，对应get请求 \r\n * @param {String} url [请求的url地址] \r\n * @param {Object} params [请求时携带的参数] \r\n */\r\nexport function get(url, params){    \r\n    return new Promise((resolve, reject) =>{        \r\n        axios.get(url, {            \r\n            params: params        \r\n        }).then(res => {\r\n            resolve(res.data);\r\n        }).catch(err =>{\r\n            reject(err.data)        \r\n\t\t})    \r\n\t});\r\n}\r\n\r\n/**\r\n * post方法：原理同get基本一样，但是要注意的是，post方法必须要使用对提交从参数对象进行序列化的操作，\r\n * 所以这里我们通过node的qs模块来序列化我们的参数，如果没有序列化操作，后台是拿不到提交的数据。\r\n * \r\n * post方法，对应post请求 \r\n * @param {String} url [请求的url地址] \r\n * @param {Object} params [请求时携带的参数] \r\n */\r\nexport function post(url, params) {\r\n    return new Promise((resolve, reject) => {\r\n        // console.log(QS.stringify(params))\r\n         axios.post(url,params)\r\n        .then(res => {\r\n            resolve(res.data);\r\n        })\r\n        .catch(err =>{\r\n            reject(err.data)\r\n        })\r\n    });\r\n}\r\n\r\n"],"mappings":"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"}]}