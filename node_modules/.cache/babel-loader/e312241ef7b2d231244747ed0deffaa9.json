{"remainingRequest":"C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\src\\views\\home\\pictureSINR.vue?vue&type=template&id=697e2782","dependencies":[{"path":"C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\src\\views\\home\\pictureSINR.vue","mtime":1688834367402},{"path":"C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\babel.config.js","mtime":1672883674000},{"path":"C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2sgfSBmcm9tICJ2dWUiOwpjb25zdCBfaG9pc3RlZF8xID0gewogIHN0eWxlOiB7CiAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAiaGVpZ2h0IjogIjQwMHB4IgogIH0KfTsKY29uc3QgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgaWQ6ICJteWNoYXJ0IiwKICBzdHlsZTogewogICAgIndpZHRoIjogIjEwMCUiLAogICAgImhlaWdodCI6ICI0MDBweCIsCiAgICAiYm94LXNoYWRvdyI6ICIwIDJweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpIgogIH0KfSwgbnVsbCwgLTEgLyogSE9JU1RFRCAqLyk7CmNvbnN0IF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgewogIGlkOiAibXljaGFydDIiLAogIHN0eWxlOiB7CiAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAiaGVpZ2h0IjogIjQwMHB4IiwKICAgICJib3gtc2hhZG93IjogIjAgMnB4IDEycHggMCByZ2JhKDAsIDAsIDAsIDAuMSkiCiAgfQp9LCBudWxsLCAtMSAvKiBIT0lTVEVEICovKTsKY29uc3QgX2hvaXN0ZWRfNCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgaWQ6ICJteWNoYXJ0MyIsCiAgc3R5bGU6IHsKICAgICJ3aWR0aCI6ICIxMDAlIiwKICAgICJoZWlnaHQiOiAiNDAwcHgiLAogICAgImJveC1zaGFkb3ciOiAiMCAycHggMTJweCAwIHJnYmEoMCwgMCwgMCwgMC4xKSIKICB9Cn0sIG51bGwsIC0xIC8qIEhPSVNURUQgKi8pOwoKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2hvaXN0ZWRfMiwgX2hvaXN0ZWRfMywgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIDxkaXYgaWQ9XCJteWNoYXJ0NFwiIHN0eWxlPVwiIHdpZHRoOiAxMDAlOyBoZWlnaHQ6NDAwcHg7Ym94LXNoYWRvdzogMCAycHggMTJweCAwIHJnYmEoMCwgMCwgMCwgMC4xKVwiPjwvZGl2PiAiKSwgX2hvaXN0ZWRfNCwgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIDxkaXYgaWQ9XCJteWNoYXJ0NVwiIHN0eWxlPVwiIHdpZHRoOiAxMDAlOyBoZWlnaHQ6NDAwcHg7Ym94LXNoYWRvdzogMCAycHggMTJweCAwIHJnYmEoMCwgMCwgMCwgMC4xKVwiPjwvZGl2PiAiKSwgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIDxkaXYgaWQ9XCJteWNoYXJ0XCIgc3R5bGU9XCIgZmxvYXQ6ICdsZWZ0Jzt3aWR0aDogNTAlOyBoZWlnaHQ6NDAwcHg7Ym94LXNoYWRvdzogMCAycHggMTJweCAwIHJnYmEoMCwgMCwgMCwgMC4xKVwiPjwvZGl2PlxuICAgICAgPGRpdiBpZD1cIm15Y2hhcnQyXCIgc3R5bGU9XCIgZmxvYXQ6ICdyaWdodCc7d2lkdGg6IDUwJTsgaGVpZ2h0OjQwMHB4O2JveC1zaGFkb3c6IDAgMnB4IDEycHggMCByZ2JhKDAsIDAsIDAsIDAuMSlcIj48L2Rpdj5cbiAgICAgIDxkaXYgaWQ9XCJteWNoYXJ0NFwiIHN0eWxlPVwiZmxvYXQ6ICdsZWZ0Jzsgd2lkdGg6IDUwJTsgaGVpZ2h0OjQwMHB4O2JveC1zaGFkb3c6IDAgMnB4IDEycHggMCByZ2JhKDAsIDAsIDAsIDAuMSlcIj48L2Rpdj5cbiAgICAgIDxkaXYgaWQ9XCJteWNoYXJ0M1wiIHN0eWxlPVwiIGZsb2F0OiAncmlnaHQnO3dpZHRoOiA1MCU7IGhlaWdodDo0MDBweDtib3gtc2hhZG93OiAwIDJweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpXCI+PC9kaXY+ICIpXSk7Cn0="},{"version":3,"mappings":";;EACSA,KAAkC,EAAlC;IAAA;IAAA;EAAA;AAAkC;gCACnCC,oBAAuG;EAAlGC,EAAE,EAAC,SAAS;EAACF,KAA8E,EAA9E;IAAA;IAAA;IAAA;EAAA;;gCAClBC,oBAAwG;EAAnGC,EAAE,EAAC,UAAU;EAACF,KAA8E,EAA9E;IAAA;IAAA;IAAA;EAAA;;gCAEnBC,oBAAwG;EAAnGC,EAAE,EAAC,UAAU;EAACF,KAA8E,EAA9E;IAAA;IAAA;IAAA;EAAA;;;;uBAJvBG,oBAUM,OAVNC,UAUM,GATFC,UAAuG,EACvGC,UAAwG,EACxGC,qIAAiH,EACjHC,UAAwG,EACxGD,qIAAiH,EACjHA,shBAGwH","names":["style","_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createCommentVNode","_hoisted_4"],"sourceRoot":"","sources":["C:\\Users\\DELL\\Desktop\\code\\dt_cup_innovate_ui\\src\\views\\home\\pictureSINR.vue"],"sourcesContent":["<template>\n    <div style=\"width: 100%;height: 400px;\">\n        <div id=\"mychart\" style=\" width: 100%; height:400px;box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1)\"></div>\n        <div id=\"mychart2\" style=\" width: 100%; height:400px;box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1)\"></div>\n        <!-- <div id=\"mychart4\" style=\" width: 100%; height:400px;box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1)\"></div> -->\n        <div id=\"mychart3\" style=\" width: 100%; height:400px;box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1)\"></div>\n        <!-- <div id=\"mychart5\" style=\" width: 100%; height:400px;box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1)\"></div> -->\n        <!-- <div id=\"mychart\" style=\" float: 'left';width: 50%; height:400px;box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1)\"></div>\n      <div id=\"mychart2\" style=\" float: 'right';width: 50%; height:400px;box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1)\"></div>\n      <div id=\"mychart4\" style=\"float: 'left'; width: 50%; height:400px;box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1)\"></div>\n      <div id=\"mychart3\" style=\" float: 'right';width: 50%; height:400px;box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1)\"></div> -->\n    </div>\n</template>\n  \n<script>\nimport * as echarts from \"echarts\";\nimport 'echarts-gl';\nimport { parameter } from \"../../api/apis.js\";\nimport { bottom } from \"@popperjs/core\";\nexport default {\n    data() {\n        return {\n            data: [],\n            actual_SINR: [],\n            theory_SINR: [],\n            througthput1: [],\n            througthput2: [],\n            MU_MUMO: [],\n        };\n    },\n    mounted() {\n        this.timer = setInterval(() => {\n            parameter.picture_3d().then((res) => {\n            this.data = res;\n            console.log(res);\n            this.Draw();\n        });\n        parameter.picture_bar().then((res) => {\n            console.log('1111')\n            // theory_SINR=res.data.theory_SINR\n            const data = JSON.parse(res.data)\n            this.actual_SINR = data.actual_SINR\n            this.theory_SINR = data.theory_SINR\n            this.Draw1()\n        })\n        parameter.picture_sinr().then((res) => {\n            const data = JSON.parse(res.data)\n            this.data_d = data.data_d\n            this.data_2_6 = data.data_2_6\n            this.data_3_5 = data.data_3_5\n            this.data_28 = data.data_28\n            this.Draw2()\n        })\n        parameter.picture_zaibo().then((res) => {\n            const data = JSON.parse(res.data)\n            this.througthput1 = data.througthput1\n            this.througthput2 = data.througthput2\n            this.MU_MUMO = data.MU_MUMO\n            this.througthput = data.througthput\n            this.Draw3()\n        });\n        }, 200000);\n        \n        // this.Draw4();\n    },\n    methods: {\n        Draw() {\n            // 基于准备好的dom，初始化echarts实例\n            let myChart = echarts.init(document.getElementById('mychart'))\n\n            // 绘制图表\n            myChart.setOption({\n                title: {\n                    text: '实际SINR',\n                    left: '50%'\n                },\n                tooltip: {},\n                visualMap: {\n                    min: 25,\n                    max: 39,\n                    inRange: {\n                        color: [\n                            '#313695',\n                            '#4575b4',\n                            '#74add1',\n                            '#abd9e9',\n                            '#e0f3f8',\n                            '#ffffbf',\n                            '#fee090',\n                            '#fdae61',\n                            '#f46d43',\n                            '#d73027',\n                            '#a50026'\n                        ]\n                    }\n                },\n                xAxis3D: {\n                    name: '距离',\n                    type: 'category',\n                    axisLabel: {\n                        formatter: '{value} m'\n                    },\n                    nameLocation: 'end'\n                },\n                yAxis3D: {\n                    name: '基站发射功率(dbm)',\n                    type: 'category',\n                    axisLabel: {\n                        formatter: '{value} '\n                    }\n                },\n                zAxis3D: {\n                    type: 'value',\n                    name: '       信噪比      ',\n                    min: '25',\n                    max: '39',\n                    axisLabel: {\n                        formatter: '{value}db'\n                    },\n                },\n                grid3D: {\n                    boxWidth: 200,\n                    boxDepth: 80,\n                    viewControl: {\n                        // projection: 'orthographic'\n                    },\n                    light: {\n                        main: {\n                            intensity: 1.2,\n                            shadow: true\n                        },\n                        ambient: {\n                            intensity: 0.3\n                        }\n                    }\n                },\n                series: [\n                    {\n                        type: 'bar3D',\n                        data: this.data.map(function (item) {\n                            return {\n                                value: [item[0], item[1], item[2]]\n                            };\n                        }),\n                        shading: 'lambert',\n                        label: {\n                            fontSize: 16,\n                            borderWidth: 1\n                        },\n                        emphasis: {\n                            label: {\n                                fontSize: 20,\n                                color: '#900'\n                            },\n                            itemStyle: {\n                                color: '#900'\n                            }\n                        }\n                    }\n                ]\n            })\n        },\n        Draw1() {\n            // 基于准备好的dom，初始化echarts实例\n            let myChart = echarts.init(document.getElementById('mychart2'))\n\n            // 绘制图表\n            myChart.setOption({\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'cross',\n                        crossStyle: {\n                            color: '#999'\n                        }\n                    }\n                },\n                toolbox: {\n                    feature: {\n                        dataView: { show: true, readOnly: false },\n                        magicType: { show: true, type: ['line', 'bar'] },\n                        restore: { show: true },\n                        saveAsImage: { show: true }\n                    }\n                },\n                legend: {\n                    data: ['实际值SINR', '理论值SINR']\n                },\n                xAxis: [\n                    {\n                        type: 'category',\n                        data: ['传感器', '监控', '手机', '无人机'],\n                        axisPointer: {\n                            type: 'shadow'\n                        },\n\n                    }\n                ],\n                yAxis: [\n                    {\n                        type: 'value',\n                        name: 'SINR',\n                        min: -5,\n                        max: 40,\n                        interval: 5,\n                        axisLabel: {\n                            formatter: '{value} db'\n                        }\n                    }\n                ],\n                series: [\n                    {\n                        itemStyle: {\n                            normal: {\n                                color: '#3B6291'\n                            }\n                        },\n                        name: '实际值SINR',\n                        type: 'bar',\n                        tooltip: {\n                            valueFormatter: function (value) {\n                                return value;\n                            }\n                        },\n                        data: this.actual_SINR\n                    },\n                    {\n                        itemStyle: {\n                            normal: {\n                                color: '#ffa510'\n                            }\n                        },\n                        name: '理论值SINR',\n                        type: 'bar',\n                        tooltip: {\n                            valueFormatter: function (value) {\n                                return value;\n                            }\n                        },\n                        data: this.theory_SINR\n                    },\n                ]\n            })\n        },\n        Draw2() {\n            // 基于准备好的dom，初始化echarts实例\n            let myChart = echarts.init(document.getElementById('mychart3'))\n\n            // 绘制图表\n            myChart.setOption({\n                title: {\n                    // text: 'Stacked Line'\n                },\n                tooltip: {\n                    trigger: 'axis'\n                },\n                legend: {\n                    data: ['频率2.6GHz', '频率3.5GHz', '频率28GHz'],\n                    top: '5%'\n                },\n                grid: {\n                    left: '3%',\n                    right: '10%',\n                    bottom: '3%',\n                    containLabel: true\n                },\n                toolbox: {\n                    feature: {\n                        saveAsImage: {}\n                    }\n                },\n                xAxis: {\n                    name: '距离',\n                    type: 'category',\n                    boundaryGap: false,\n                    data: this.data_d,\n                    axisLabel: {\n                        formatter: '{value} m'\n                    }\n                },\n                yAxis: {\n                    name: '实际SINR',\n                    type: 'value',\n                    axisLabel: {\n                        formatter: '{value} db'\n                    }\n                },\n                series: [\n                    {\n                        name: '频率2.6GHz',\n                        type: 'line',\n                        data: this.data_2_6\n                    },\n                    {\n                        name: '频率3.5GHz',\n                        type: 'line',\n                        data: this.data_3_5\n                    },\n                    {\n                        name: '频率28GHz',\n                        type: 'line',\n                        data: this.data_28\n                    },\n                ]\n            })\n        },        \n            \n    },\n\n}\n\n</script>\n    \n    "]}]}